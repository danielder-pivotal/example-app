apiVersion: experimental.kontinue.io/v1
kind: Workflow
metadata:
  name: app
spec:
  steps:
    - name: unit
      sources:
        - name: repo
          sourceRefs:
          - name: app-repo
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
      templates:
        - template: |-
            apiVersion: tekton.dev/v1beta1
            kind: TaskRun
            metadata:
              generateName: 'app-unit-{{ .Sources.repo.branch }}-'
            spec:
              serviceAccountName: service-account
              taskSpec:
                steps:
                - name: run
                  env:
                    - name: GOPATH
                      value: /workspace/go
                    - name: GIT_TOKEN
                      valueFrom:
                        secretKeyRef:
                          name: git-token
                          key: value
                  image: golang
                  script: |
                    set -o errexit
                    set -o xtrace

                    git clone https://github.com/{{ .Sources.repo.url }} repo && cd repo
                    git checkout {{ .Sources.repo.revision }}

                    go test -v
    - name: build
      sources:
        - name: repo
          sourceRefs:
          - name: app-repo
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
        - name: builder
          sourceRefs:
          - name: builder
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      outputs:
        latestImage:
          from: "{.status.latestImage}"
      templates:
        - template: |-
            kind: Build
            apiVersion: build.pivotal.io/v1alpha1
            metadata:
              generateName: 'app-{{ .Sources.repo.branch }}'
            spec:
              tags: [ 'kontinue/app:{{ .Sources.repo.branch }}' ]
              serviceAccount: service-account
              builder:
                image: '{{ .Sources.builder.url }}@{{ .Sources.builder.revision }}'
              source:
                git:
                  url: 'https://github.com/{{ .Sources.repo.url }}'
                  revision: '{{ .Sources.repo.revision }}'
    - name: deploy-redis
      sources:
        - name: redis
          sourceRefs:
          - name: redis
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      outputs:
        serviceName:
          from: "{.metadata.name}"
      templates:
        - lifecycle: DeleteAfterRun
          template: |-
            apiVersion: v1
            kind: Service
            metadata:
              labels:
                app.kubernetes.io/name: {{ .StepId }}
              name: redis-{{ .StepId }}
            spec:
              ports:
                - port: 8080
                  protocol: TCP
                  targetPort: 8080
              selector:
                app.kubernetes.io/name: {{ .StepId }}
              type: ClusterIP
        - lifecycle: DeleteAfterRun
          template: |-
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              labels:
                app.kubernetes.io/name: {{ .StepId }}
              name: redis-{{ .StepId }}
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app.kubernetes.io/name: {{ .StepId }}
              template:
                metadata:
                  labels:
                    app.kubernetes.io/name: {{ .StepId }}
                spec:
                  containers:
                    - image: '{{ .Sources.redis.url }}@{{ .Sources.redis.revision }}'
                      name: redis
                      args: [ "-host", "http://0.0.0.0:8080" ]
                      ports:
                        - containerPort: 8080
                      readinessProbe:
                        httpGet:
                          path: /readyz
                          port: 8080
    - name: setup-kubeconfig
      sources:
        - name: redis
          sourceRefs:
          - name: redis-1-18-6
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      inputs:
        serviceName:
          step: deploy-redis
          from: serviceName
          matches: [redis]
      outputs:
        kubeconfig:
          from: "{.metadata.name}"
      templates:
        - lifecycle: DeleteAfterRun
          template: |-
            apiVersion: v1
            kind: ConfigMap
            metadata:
              generateName: 'app-deploy-cm-'
            data:
              config.yaml: |-
                apiVersion: v1
                kind: Config
                clusters:
                  - name: test
                    cluster:
                      server: http://{{ .Inputs.serviceName }}:8080
                current-context: test
                contexts:
                  - name: test
                    context:
                      cluster: test
                      user: ''
    - name: deploy-app
      sources:
        - name: repo
          sourceRefs:
          - name: app-repo
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
        - name: image
          sourceRefs:
          - name: test-image
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
        - name: redis
          sourceRefs:
          - name: redis-1-18-6
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      inputs:
        latestImage:
          step: build
          from: latestImage
        serviceName:
          step: deploy-redis
          from: serviceName
          matches: [redis]
        kubeconfig:
          step: setup-kubeconfig
          from: kubeconfig
          matches: [redis]
      templates:
        - lifecycle: DeleteAfterRun
          template: |-
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              generateName: 'app-deploy-ctrl-{{ .Sources.repo.branch }}-{{ .Sources.redis.tag | replace "." "-" }}-'
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app.kubernetes.io/name: {{ .StepId }}
              template:
                metadata:
                  labels:
                    app.kubernetes.io/name: {{ .StepId }}
                spec:
                  containers:
                    - image: '{{ .Inputs.latestImage }}'
                      command: [ /cnb/lifecycle/launcher ]
                      env:
                        - name: REDIS_ADDR
                          value: "{{ .Inputs.serviceName }}:6379"
                      name: app
    - name: integration-test
      sources:
        - name: repo
          sourceRefs:
          - name: app-repo
            kind: GitSource
            apiVersion: experimental.kontinue.io/v1
        - name: image
          sourceRefs:
          - name: test-image
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
        - name: redis
          sourceRefs:
          - name: redis-1-18-6
            kind: RegistrySource
            apiVersion: experimental.kontinue.io/v1
      inputs:
        serviceName:
          step: deploy-redis
          from: serviceName
          matches: [redis]
        kubeconfig:
          step: setup-kubeconfig
          from: kubeconfig
          matches: [redis]
      templates:
        - template: |-
            apiVersion: tekton.dev/v1beta1
            kind: TaskRun
            metadata:
              generateName: 'app-integr-{{ .Sources.repo.branch }}-{{ .Sources.redis.tag | replace "." "-" }}'
            spec:
              serviceAccountName: service-account
              taskSpec:
                steps:
                - name: run
                  image: busybox
                  script: |
                    set -o errexit
                    set -o xtrace

                    wget -O-  {{.Inputs.serviceName}}:8080
